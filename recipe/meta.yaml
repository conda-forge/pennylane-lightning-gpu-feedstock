{% set name = "pennylane-lightning-gpu" %}
{% set version = "0.35.0" %}
{% set build_num = 0 %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/PennyLaneAI/pennylane-lightning/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 1a16fd3dbf03788e4f8dd510bbb668e7a7073ca62be4d9414e2c32e0166e8bda

build:
  number: {{ build_num }}
  skip: true  # [py==38 or (not linux) or (cuda_compiler_version not in ("11.8", "12.0"))]
  script: PL_BACKEND=lightning_gpu {{ PYTHON }} -m pip install . --no-deps -vv
  ignore_run_exports_from:
    - {{ compiler('cuda') }}
  missing_dso_whitelist:
    - '*/libcuda.*'   # [linux]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - cmake
    - ninja
  host:
    - libgomp          # [linux]
    - pip
    - pybind11
    - python
    - custatevec
    - cuda-cudart-dev  # [(cuda_compiler_version or "").startswith("12")]
    - libcublas-dev    # [(cuda_compiler_version or "").startswith("12")]
    - libcusparse-dev  # [(cuda_compiler_version or "").startswith("12")]
    - cuda-version {{ cuda_compiler_version }}
  run:
    - {{ pin_compatible("cuda-version", min_pin="x", max_pin="x") }}
    - cudatoolkit                                       # [(cuda_compiler_version or "").startswith("11")]
    - pennylane >=0.35
    - python
test:
  imports:
    - pennylane_lightning
  commands:
    - python -c "import pennylane as qml; qml.about()"
    - pip check
  requires:
    - pip
about:
  home: https://docs.pennylane.ai/projects/lightning-gpu/en/latest/
  summary: The PennyLane-Lightning-GPU plugin extends the Pennylane-Lightning state-vector simulator written in C++, and offloads to the NVIDIA cuQuantum SDK for GPU accelerated circuit simulation.
  license: Apache-2.0
  # MIT is pennylane/grouping/graph_colouring.py
  license_file: LICENSE
  doc_url: https://docs.pennylane.ai/projects/lightning-gpu/en/latest/devices.html

extra:
  recipe-maintainers:
    - leofang
    - vincentmr
  feedstock-name: {{ name }}
